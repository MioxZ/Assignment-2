# This is a basic workflow to help you get started with Actions

name: AssignmentCI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
    # branches: [ main ]
  # pull_request:
    # branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      filename:
        description: "Define File Name (with extension, e.g. .txt & path (if in different directory))"
        required: true
        default: 'sample.txt'
        
      toReplace:
        description: "Insert the string to be replaced"
        required: true
      
      toReplaceWith:
        description: "Insert the string to be replaced with"
        required: true

env:
  SCRIPTS_DIR: scripts

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Test-build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Execute Test Python
        run : | 
          python $GITHUB_WORKSPACE/test.py
      
      - name: Execute Test Python - method 2
        run : | 
          python test.py
    
  Dev-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      contents: write
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Execute Python Script
        run : | 
          python "${{ env.SCRIPTS_DIR }}/replaceFileString.py" "${{ github.event.inputs.filename }}" "${{ github.event.inputs.toReplace }}" "${{ github.event.inputs.toReplaceWith }}"
        
      - name: Git Commit/Push Changes
        # You may pin to the exact commit or the version.
        # uses: actions-x/commit@803b20e5b72c0425eb7919c42c321e67c5bc5d2d
        uses: actions-x/commit@v6
        with:
          # The committer's email address
          email: ${{ github.actor }}@localhost
          # The committer's name
          name: ${{ github.actor }}
          # The commit message
          message: Automatically updated using GitHub Actions - Replace substring in file
          # The branch to push the changes back to, defaults to the current branch
          branch: ${{ github.ref }}
          # The files to add separated by space, defaults to every file
          files: .
          # The repository to push the code to, defaults to origin (e.g. this repository)
          repository: origin
          # The token used to push the code, not needed if you push to the same repository
          token: ${{ github.token }}
          # Whether to perform force push
          force: 0
          # The working directory that will be used for git commands
          directory: .

